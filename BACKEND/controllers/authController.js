// Linha 1 â€“ Importa a conexÃ£o com o banco
const db = require('../db/connection');

// Linha 3 â€“ FunÃ§Ã£o de login
exports.login = async (req, res) => {
  // Linha 4 â€“ Captura os dados recebidos do frontend
  const { cdusuario, cdpassword } = req.body;

  // âœ… Linha 6 â€“ Debug: mostra o corpo da requisiÃ§Ã£o no terminal
  console.log('ðŸ”Ž Recebido no login:', req.body);

  // Linha 8 â€“ Verifica se os dados vieram preenchidos
  if (!cdusuario || !cdpassword) {
    return res.status(400).json({ erro: 'UsuÃ¡rio e senha sÃ£o obrigatÃ³rios' });
  }

  try {
    // Linha 13 â€“ Busca o usuÃ¡rio no banco de dados
    const result = await db.query(
      'SELECT * FROM usuario WHERE cdusuario = $1 AND cdativo = true',
      [cdusuario]
    );

    // Linha 18 â€“ Se existir, pega o usuÃ¡rio
    const usuario = result.rows[0];

    // Linha 20 â€“ Verifica se encontrou e se a senha confere
    if (!usuario || usuario.cdpassword !== cdpassword) {
      return res.status(401).json({ erro: 'Credenciais invÃ¡lidas' });
    }

    // Linha 25 â€“ Retorna os dados do usuÃ¡rio logado
    res.status(200).json({
      mensagem: 'Login realizado com sucesso',
      usuario: {
        id: usuario.idusuario,
        nome: usuario.nmusuario,
        username: usuario.nmusername
      }
    });

  } catch (err) {
    // Linha 34 â€“ Captura e retorna erros internos
    res.status(500).json({ erro: 'Erro interno', detalhe: err.message });
  }
};
